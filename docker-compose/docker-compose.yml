version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management
    networks: 
      - MySQL_API
    deploy:
      replicas: 1
    ports:
        - 5672:5672
        - 15672:15672
    container_name: RabbitMQ_Server
  
  MySQL:
    image: mysql
    deploy:
        replicas: 1
    container_name: MySQL_Server
    networks: 
      - MySQL_API
    ports:
        - 3306:3306
    environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

  post_consumer:
    image: orireiter/mysql_api:mysql_consumer_post
    networks: 
      - MySQL_API
    deploy:
      replicas: 3
    volumes:
        - ./config.yml:/app/config.yml
  
  get_consumer:
    image: orireiter/mysql_api:mysql_consumer_get
    networks: 
      - MySQL_API
    deploy:
      replicas: 1
    volumes:
        - ./config.yml:/app/config.yml

  put_consumer:
    image: orireiter/mysql_api:mysql_consumer_put
    networks: 
      - MySQL_API
    deploy:
      replicas: 1
    volumes:
        - ./config.yml:/app/config.yml

  delete_consumer:
    image: orireiter/mysql_api:mysql_consumer_delete
    networks: 
      - MySQL_API
    deploy:
      replicas: 1
    volumes:
        - ./config.yml:/app/config.yml
  
  web_api:
    image: orireiter/mysql_api:mysql_web_api
    container_name: Mysql_Web_API
    deploy:
      replicas: 1
    networks: 
      - MySQL_API
    volumes:
        - ./config.yml:/app/config.yml
        - ./config.json:/docker-entrypoint.d/config.json
    ports:
        - 80:80

networks:
    MySQL_API:
      driver: bridge